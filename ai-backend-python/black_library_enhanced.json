{
  "black_library_functionality": {
    "purpose": "AI learning visualization and knowledge management system",
    "features": {
      "learning_trees": "Hexagonal nodes representing learned capabilities for each AI",
      "ai_nexus": "Individual learning centers for each AI type with color-coded knowledge points",
      "real_time_updates": "30-second polling for live data updates",
      "knowledge_visualization": "Dynamic learning tree with level-appropriate nodes",
      "recent_learnings": "Track of latest learning achievements for each AI",
      "custody_integration": "Integration with Custodes Protocol testing results",
      "learning_cycle_integration": "Real-time learning cycle visualization and tracking"
    },
    "learning_cycle_integration": {
      "purpose": "Display real-time learning cycle information",
      "features": {
        "cycle_status": "Show current learning cycle status",
        "learning_progress": "Visualize learning progress in real-time",
        "cycle_history": "Track historical learning cycles",
        "ai_learning_trees": "Update learning trees based on cycle data",
        "knowledge_points": "Display knowledge points gained from cycles"
      },
      "data_sources": {
        "custodes_protocol": "Learning cycle triggers and results",
        "fallback_system": "Internal learning data",
        "internet_learning": "External knowledge acquisition",
        "sckipit_integration": "ML-enhanced learning"
      },
      "visualization": {
        "learning_cycles": "Circular progress indicators for learning cycles",
        "knowledge_flow": "Animated knowledge flow between AIs",
        "cycle_timeline": "Timeline of learning cycle events",
        "ai_progression": "Real-time AI level progression"
      }
    },
    "ai_types": {
      "imperium": {
        "color": "amber",
        "emoji": "\ud83d\udc51",
        "description": "System Architect & Overseer",
        "focus": "System architecture, performance optimization, scalability",
        "learning_cycle_focus": "System design patterns, architecture principles"
      },
      "conquest": {
        "color": "red",
        "emoji": "\u2694\ufe0f",
        "description": "Code Generator & Optimizer",
        "focus": "Code generation, optimization, app development",
        "learning_cycle_focus": "Code generation techniques, optimization strategies"
      },
      "guardian": {
        "color": "blue",
        "emoji": "\ud83d\udee1\ufe0f",
        "description": "Security & Quality Assurance",
        "focus": "Security, code quality, testing",
        "learning_cycle_focus": "Security patterns, quality assurance methods"
      },
      "sandbox": {
        "color": "green",
        "emoji": "\ud83e\uddea",
        "description": "Experimental & Innovation Lab",
        "focus": "Experimentation, innovation, prototyping",
        "learning_cycle_focus": "Innovation techniques, experimental methodologies"
      }
    },
    "learning_nodes": {
      "core_intelligence": "Base AI capabilities (Level 1+)",
      "code_analysis": "Code analysis insights (Level 2+)",
      "system_design": "System design insights (Level 3+)",
      "security": "Security insights (Level 4+)",
      "optimization": "Optimization insights (Level 5+)",
      "innovation": "Innovation insights (Level 6+)",
      "meta_learning": "Meta-learning capabilities (Level 7+)",
      "collaboration": "Cross-AI collaboration (Level 8+)",
      "experimental": "Experimental capabilities (Level 9+)"
    },
    "data_sources": {
      "backend_api": "Real-time data from AI backend services",
      "custody_protocol": "Testing results and eligibility status",
      "learning_metrics": "Learning scores, cycles, and progress",
      "cached_data": "Local persistence for offline viewing",
      "learning_cycles": "Real-time learning cycle data and status"
    },
    "technical_implementation": {
      "frontend": "Flutter app with custom painting for learning trees",
      "backend_integration": "HTTP API calls to agent status endpoints",
      "data_persistence": "SharedPreferences for local caching",
      "real_time_updates": "Timer-based polling with WebSocket support",
      "learning_cycle_updates": "Real-time learning cycle status updates"
    }
  }
}