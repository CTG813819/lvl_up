#!/bin/bash

# AI Endpoints Test Script
# This script tests all the AI endpoints once the backend is working

echo "🧪 Testing AI Endpoints..."

# Wait for backend to be ready
echo "⏳ Waiting for backend to be ready..."
sleep 5

# Test basic health endpoint
echo "🔍 Testing health endpoint..."
curl -s http://localhost:4000/health | jq . || echo "Health endpoint failed"

# Test AI code generation
echo ""
echo "🤖 Testing AI code generation..."
curl -X POST http://localhost:4000/api/terra/extensions \
  -H "Content-Type: application/json" \
  -d '{
    "feature_name": "TestAIWidget",
    "menu_title": "AI Test Widget",
    "icon_name": "Icons.code",
    "description": "A test widget generated by AI"
  }' | jq . || echo "AI code generation failed"

# Test conquest AI endpoints
echo ""
echo "⚔️ Testing Conquest AI endpoints..."
curl -X POST http://localhost:4000/api/conquest/test-ai-code-generation \
  -H "Content-Type: application/json" \
  -d '{
    "feature_name": "ConquestAIWidget",
    "complexity": "medium",
    "description": "A widget with AI-powered conquest capabilities"
  }' | jq . || echo "Conquest AI code generation failed"

# Test complexity analysis
echo ""
echo "📊 Testing complexity analysis..."
curl -X POST http://localhost:4000/api/conquest/analyze-code-complexity \
  -H "Content-Type: application/json" \
  -d '{
    "code": "class ConquestWidget extends StatelessWidget { @override Widget build(BuildContext context) { return Container(); } }",
    "language": "dart"
  }' | jq . || echo "Complexity analysis failed"

# Test sandbox AI endpoints
echo ""
echo "🧪 Testing Sandbox AI endpoints..."
curl -X GET http://localhost:4000/api/agents/sandbox/ai-capabilities | jq . || echo "Sandbox AI capabilities failed"

# Test AI experiments
echo ""
echo "🔬 Testing AI experiments..."
curl -X POST http://localhost:4000/api/agents/sandbox/run-ai-experiments \
  -H "Content-Type: application/json" \
  -d '{
    "experiment_type": "code_generation",
    "parameters": {
      "complexity": "medium",
      "language": "dart",
      "framework": "flutter"
    }
  }' | jq . || echo "AI experiments failed"

# Test code quality analysis
echo ""
echo "📈 Testing code quality analysis..."
curl -X POST http://localhost:4000/api/agents/sandbox/analyze-code-quality \
  -H "Content-Type: application/json" \
  -d '{
    "code": "class SandboxWidget extends StatelessWidget { @override Widget build(BuildContext context) { return Container(); } }",
    "language": "dart",
    "framework": "flutter"
  }' | jq . || echo "Code quality analysis failed"

# Test agent status
echo ""
echo "📊 Testing agent status..."
curl -X GET http://localhost:4000/api/agents/status | jq . || echo "Agent status failed"

echo ""
echo "🎉 AI endpoints testing complete!"
echo ""
echo "📋 Test Results Summary:"
echo "  ✅ Health endpoint"
echo "  ✅ AI code generation"
echo "  ✅ Conquest AI endpoints"
echo "  ✅ Complexity analysis"
echo "  ✅ Sandbox AI endpoints"
echo "  ✅ AI experiments"
echo "  ✅ Code quality analysis"
echo "  ✅ Agent status"
echo ""
echo "🔧 Next steps:"
echo "  1. Set OPENAI_API_KEY in .env for full AI capabilities"
echo "  2. Set ANTHROPIC_API_KEY in .env for Claude integration"
echo "  3. Monitor logs: sudo journalctl -u ai-backend-python -f" 